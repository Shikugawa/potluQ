// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:        "clubs",
		Columns:     ClubsColumns,
		PrimaryKey:  []*schema.Column{ClubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MusicsColumns holds the columns for the "musics" table.
	MusicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "club_id", Type: field.TypeInt, Nullable: true},
	}
	// MusicsTable holds the schema information for the "musics" table.
	MusicsTable = &schema.Table{
		Name:       "musics",
		Columns:    MusicsColumns,
		PrimaryKey: []*schema.Column{MusicsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "musics_clubs_music",
				Columns: []*schema.Column{MusicsColumns[1]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubUserColumns holds the columns for the "club_user" table.
	ClubUserColumns = []*schema.Column{
		{Name: "club_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ClubUserTable holds the schema information for the "club_user" table.
	ClubUserTable = &schema.Table{
		Name:       "club_user",
		Columns:    ClubUserColumns,
		PrimaryKey: []*schema.Column{ClubUserColumns[0], ClubUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "club_user_club_id",
				Columns: []*schema.Column{ClubUserColumns[0]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "club_user_user_id",
				Columns: []*schema.Column{ClubUserColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClubsTable,
		MusicsTable,
		UsersTable,
		ClubUserTable,
	}
)

func init() {
	MusicsTable.ForeignKeys[0].RefTable = ClubsTable
	ClubUserTable.ForeignKeys[0].RefTable = ClubsTable
	ClubUserTable.ForeignKeys[1].RefTable = UsersTable
}
